// Generated by view binder compiler. Do not edit!
package com.example.allodoc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.allodoc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDocteurProfilBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView Experience;

  @NonNull
  public final Button MettreEnContact;

  @NonNull
  public final TextView NameDoc;

  @NonNull
  public final TextView NmrPatients;

  @NonNull
  public final TextView NumExperience;

  @NonNull
  public final TextView NumPrix;

  @NonNull
  public final TextView Patients;

  @NonNull
  public final TextView Prix;

  @NonNull
  public final TextView SpecialiteDoc;

  @NonNull
  public final ImageView imgDoc;

  private ActivityDocteurProfilBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView Experience, @NonNull Button MettreEnContact, @NonNull TextView NameDoc,
      @NonNull TextView NmrPatients, @NonNull TextView NumExperience, @NonNull TextView NumPrix,
      @NonNull TextView Patients, @NonNull TextView Prix, @NonNull TextView SpecialiteDoc,
      @NonNull ImageView imgDoc) {
    this.rootView = rootView;
    this.Experience = Experience;
    this.MettreEnContact = MettreEnContact;
    this.NameDoc = NameDoc;
    this.NmrPatients = NmrPatients;
    this.NumExperience = NumExperience;
    this.NumPrix = NumPrix;
    this.Patients = Patients;
    this.Prix = Prix;
    this.SpecialiteDoc = SpecialiteDoc;
    this.imgDoc = imgDoc;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDocteurProfilBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDocteurProfilBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_docteur_profil, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDocteurProfilBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Experience;
      TextView Experience = ViewBindings.findChildViewById(rootView, id);
      if (Experience == null) {
        break missingId;
      }

      id = R.id.MettreEnContact;
      Button MettreEnContact = ViewBindings.findChildViewById(rootView, id);
      if (MettreEnContact == null) {
        break missingId;
      }

      id = R.id.NameDoc;
      TextView NameDoc = ViewBindings.findChildViewById(rootView, id);
      if (NameDoc == null) {
        break missingId;
      }

      id = R.id.NmrPatients;
      TextView NmrPatients = ViewBindings.findChildViewById(rootView, id);
      if (NmrPatients == null) {
        break missingId;
      }

      id = R.id.NumExperience;
      TextView NumExperience = ViewBindings.findChildViewById(rootView, id);
      if (NumExperience == null) {
        break missingId;
      }

      id = R.id.NumPrix;
      TextView NumPrix = ViewBindings.findChildViewById(rootView, id);
      if (NumPrix == null) {
        break missingId;
      }

      id = R.id.Patients;
      TextView Patients = ViewBindings.findChildViewById(rootView, id);
      if (Patients == null) {
        break missingId;
      }

      id = R.id.Prix;
      TextView Prix = ViewBindings.findChildViewById(rootView, id);
      if (Prix == null) {
        break missingId;
      }

      id = R.id.SpecialiteDoc;
      TextView SpecialiteDoc = ViewBindings.findChildViewById(rootView, id);
      if (SpecialiteDoc == null) {
        break missingId;
      }

      id = R.id.imgDoc;
      ImageView imgDoc = ViewBindings.findChildViewById(rootView, id);
      if (imgDoc == null) {
        break missingId;
      }

      return new ActivityDocteurProfilBinding((RelativeLayout) rootView, Experience,
          MettreEnContact, NameDoc, NmrPatients, NumExperience, NumPrix, Patients, Prix,
          SpecialiteDoc, imgDoc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
