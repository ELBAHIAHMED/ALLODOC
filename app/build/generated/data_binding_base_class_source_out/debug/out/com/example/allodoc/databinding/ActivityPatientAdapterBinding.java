// Generated by view binder compiler. Do not edit!
package com.example.allodoc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.allodoc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientAdapterBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button Accepter;

  @NonNull
  public final TextView PatientNom;

  @NonNull
  public final ImageView PatientidIVimage;

  @NonNull
  public final TextView PatientsAdress;

  @NonNull
  public final Button Refuser;

  private ActivityPatientAdapterBinding(@NonNull CardView rootView, @NonNull Button Accepter,
      @NonNull TextView PatientNom, @NonNull ImageView PatientidIVimage,
      @NonNull TextView PatientsAdress, @NonNull Button Refuser) {
    this.rootView = rootView;
    this.Accepter = Accepter;
    this.PatientNom = PatientNom;
    this.PatientidIVimage = PatientidIVimage;
    this.PatientsAdress = PatientsAdress;
    this.Refuser = Refuser;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Accepter;
      Button Accepter = ViewBindings.findChildViewById(rootView, id);
      if (Accepter == null) {
        break missingId;
      }

      id = R.id.PatientNom;
      TextView PatientNom = ViewBindings.findChildViewById(rootView, id);
      if (PatientNom == null) {
        break missingId;
      }

      id = R.id.PatientidIVimage;
      ImageView PatientidIVimage = ViewBindings.findChildViewById(rootView, id);
      if (PatientidIVimage == null) {
        break missingId;
      }

      id = R.id.PatientsAdress;
      TextView PatientsAdress = ViewBindings.findChildViewById(rootView, id);
      if (PatientsAdress == null) {
        break missingId;
      }

      id = R.id.Refuser;
      Button Refuser = ViewBindings.findChildViewById(rootView, id);
      if (Refuser == null) {
        break missingId;
      }

      return new ActivityPatientAdapterBinding((CardView) rootView, Accepter, PatientNom,
          PatientidIVimage, PatientsAdress, Refuser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
